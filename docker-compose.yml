version: '3.8'

services:

  adminer:
    image: adminer
    restart: always
    ports:
      - "4242:8080"
    networks:
      - time_manager_network

  api:
    build:
      context: ./TimeManagerProject
      dockerfile: Dockerfile
    container_name: timemanager-api-dev
    ports:
      - "4000:4000"
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./TimeManagerProject:/app
    command: ["sh", "-c", "mix deps.get && mix phx.server"]
    networks:
      - time_manager_network

  db:
    image: postgres:latest
    container_name: timemanager-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - time_manager_network

  client:
    build:
      context: ./TimeManagerInterface
      dockerfile: Dockerfile
    container_name: timemanager-client-dev
    ports:
      - "8000:5173"
    volumes:
      - ./TimeManagerInterface:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]
    networks:
      - time_manager_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - time_manager_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - time_manager_network
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  app_deps:
  app_build:
  postgres_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  time_manager_network:
    driver: bridge
